{"version":3,"sources":["../../src/fields/slugField.ts"],"sourcesContent":["import type { CheckboxField, Field, FieldHook, TextField } from 'payload'\n\nimport type { SlugFieldConfig } from '../types.js'\n\nimport { getPluginPath } from '../utils/getPluginPath.js'\nimport { slugify } from '../utils/slugify.js'\n\ntype Props = {\n  checkboxOverrides?: Partial<CheckboxField>\n  config: SlugFieldConfig\n  slugOverrides?: Partial<TextField>\n}\n\nexport const validateSlug =\n  (config: SlugFieldConfig): FieldHook =>\n  ({ data, req, siblingData, value }) => {\n    const slugLock = siblingData[config.lockFieldName]\n\n    // If the slug is locked, return the existing value\n    if (!slugLock) {\n      return value\n    }\n\n    const missingFields: string[] = []\n\n    // Collect values of the fields used for slug generation\n    const fields = config.useFields.map((field) => {\n      const fieldValue = data?.[field] || null\n\n      if (!fieldValue) {\n        missingFields.push(field) // Track missing fields\n      }\n\n      return fieldValue\n    })\n\n    // If any required fields are missing, log and return the original value\n    if (missingFields.length > 0) {\n      req.payload.logger.warn('Missing fields for slug generation:', missingFields)\n      return value\n    }\n\n    const separator = config.slugify.replacement ?? '-'\n\n    // Generate the slug using slugify\n    const processedSlug = fields\n      .filter((item) => Boolean(item)) // Remove null/undefined values\n      .map((fieldValue) => slugify(String(fieldValue), config.slugify)) // Slugify each field\n      .join(separator) // Join the slugified parts\n\n    return processedSlug\n  }\n\nexport const createSlugField = (props: Props): Field[] => {\n  const { checkboxOverrides = {}, config, slugOverrides = {} } = props || {}\n  const { useFields = ['title'] } = config\n  const checkBoxField: CheckboxField = {\n    name: 'slugLock',\n    type: 'checkbox',\n    defaultValue: true,\n    ...checkboxOverrides,\n    admin: {\n      hidden: true,\n      position: 'sidebar',\n      ...checkboxOverrides.admin,\n    },\n  }\n\n  const slugField: TextField = {\n    name: 'slug',\n    type: 'text',\n    admin: {\n      components: {\n        Field: {\n          path: `payload-plugin-navigation/client#SlugFieldClient`,\n          // getPluginPath('client', '#SlugFieldClient'),\n\n          clientProps: {\n            custom: {\n              checkboxFieldPath: checkBoxField.name,\n              watchFields: useFields,\n            },\n          },\n        },\n      },\n      position: 'sidebar',\n    },\n    hooks: {\n      beforeValidate: [validateSlug(config)],\n    },\n    index: true,\n    localized: true,\n    required: true,\n    unique: true,\n  }\n\n  return [slugField, checkBoxField]\n}\n"],"names":["slugify","validateSlug","config","data","req","siblingData","value","slugLock","lockFieldName","missingFields","fields","useFields","map","field","fieldValue","push","length","payload","logger","warn","separator","replacement","processedSlug","filter","item","Boolean","String","join","createSlugField","props","checkboxOverrides","slugOverrides","checkBoxField","name","type","defaultValue","admin","hidden","position","slugField","components","Field","path","clientProps","custom","checkboxFieldPath","watchFields","hooks","beforeValidate","index","localized","required","unique"],"mappings":"AAKA,SAASA,OAAO,QAAQ,sBAAqB;AAQ7C,OAAO,MAAMC,eACX,CAACC,SACD,CAAC,EAAEC,IAAI,EAAEC,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;QAChC,MAAMC,WAAWF,WAAW,CAACH,OAAOM,aAAa,CAAC;QAElD,mDAAmD;QACnD,IAAI,CAACD,UAAU;YACb,OAAOD;QACT;QAEA,MAAMG,gBAA0B,EAAE;QAElC,wDAAwD;QACxD,MAAMC,SAASR,OAAOS,SAAS,CAACC,GAAG,CAAC,CAACC;YACnC,MAAMC,aAAaX,MAAM,CAACU,MAAM,IAAI;YAEpC,IAAI,CAACC,YAAY;gBACfL,cAAcM,IAAI,CAACF,OAAO,uBAAuB;;YACnD;YAEA,OAAOC;QACT;QAEA,wEAAwE;QACxE,IAAIL,cAAcO,MAAM,GAAG,GAAG;YAC5BZ,IAAIa,OAAO,CAACC,MAAM,CAACC,IAAI,CAAC,uCAAuCV;YAC/D,OAAOH;QACT;QAEA,MAAMc,YAAYlB,OAAOF,OAAO,CAACqB,WAAW,IAAI;QAEhD,kCAAkC;QAClC,MAAMC,gBAAgBZ,OACnBa,MAAM,CAAC,CAACC,OAASC,QAAQD,OAAO,+BAA+B;SAC/DZ,GAAG,CAAC,CAACE,aAAed,QAAQ0B,OAAOZ,aAAaZ,OAAOF,OAAO,GAAG,qBAAqB;SACtF2B,IAAI,CAACP,WAAW,2BAA2B;;QAE9C,OAAOE;IACT,EAAC;AAEH,OAAO,MAAMM,kBAAkB,CAACC;IAC9B,MAAM,EAAEC,oBAAoB,CAAC,CAAC,EAAE5B,MAAM,EAAE6B,gBAAgB,CAAC,CAAC,EAAE,GAAGF,SAAS,CAAC;IACzE,MAAM,EAAElB,YAAY;QAAC;KAAQ,EAAE,GAAGT;IAClC,MAAM8B,gBAA+B;QACnCC,MAAM;QACNC,MAAM;QACNC,cAAc;QACd,GAAGL,iBAAiB;QACpBM,OAAO;YACLC,QAAQ;YACRC,UAAU;YACV,GAAGR,kBAAkBM,KAAK;QAC5B;IACF;IAEA,MAAMG,YAAuB;QAC3BN,MAAM;QACNC,MAAM;QACNE,OAAO;YACLI,YAAY;gBACVC,OAAO;oBACLC,MAAM,CAAC,gDAAgD,CAAC;oBACxD,+CAA+C;oBAE/CC,aAAa;wBACXC,QAAQ;4BACNC,mBAAmBb,cAAcC,IAAI;4BACrCa,aAAanC;wBACf;oBACF;gBACF;YACF;YACA2B,UAAU;QACZ;QACAS,OAAO;YACLC,gBAAgB;gBAAC/C,aAAaC;aAAQ;QACxC;QACA+C,OAAO;QACPC,WAAW;QACXC,UAAU;QACVC,QAAQ;IACV;IAEA,OAAO;QAACb;QAAWP;KAAc;AACnC,EAAC"}