{"version":3,"sources":["../../src/utils/enhanceFields.ts"],"sourcesContent":["import type { Field } from 'payload'\n\nimport type { NavigationPluginConfig } from '../types.js'\n\nimport {\n  createLocalizedSlugsField,\n  createLocalizedUrlField,\n  createPermalinkField,\n  createSlugField,\n  createUrlField,\n} from '../fields/index.js'\nimport { createFieldConfigs } from './createFieldConfigs.js'\n\nexport const enhanceFields = ({\n  config,\n  fields,\n  locales,\n}: {\n  config: NavigationPluginConfig\n  fields: Field[]\n  locales: string[]\n}) => {\n  let updatedFields = [...fields] // Start with a copy of the existing fields\n\n  // Create index for fast lookups\n  const indexedFields = fields.reduce(\n    (index, field) => {\n      if ('name' in field && typeof field.name === 'string') {\n        index[field.name] = field\n      }\n      return index\n    },\n    {} as Record<string, Field>,\n  )\n\n  const addFields = (newFields: Field[]) => {\n    newFields.forEach((field) => {\n      if ('name' in field && typeof field.name === 'string') {\n        if (!indexedFields[field.name]) {\n          updatedFields.push(field)\n          indexedFields[field.name] = field\n        }\n      } else {\n        console.warn('Field without a name encountered. Skipping:', field)\n      }\n    })\n  }\n\n  // Generate configurations\n  const { localizedSlugFieldConfig, localizedUrlFieldConfig, slugFieldConfig, urlFieldConfig } =\n    createFieldConfigs(config, locales)\n\n  // Add slug fields\n  if (!indexedFields[slugFieldConfig.fieldName]) {\n    const slugFields = createSlugField({ config: slugFieldConfig })\n    addFields(slugFields) // Handles multiple slug-related fields\n  }\n\n  // Add localized slug fields\n  if (!indexedFields[localizedSlugFieldConfig.fieldName]) {\n    const localizedField = createLocalizedSlugsField(localizedSlugFieldConfig)\n    addFields([localizedField])\n  }\n\n  // Add URL fields\n  if (!indexedFields[urlFieldConfig.fieldName]) {\n    const field = createUrlField(urlFieldConfig)\n\n    addFields([field])\n  }\n\n  // Add Localized URL field\n  if (!indexedFields[localizedUrlFieldConfig.fieldName]) {\n    const field = createLocalizedUrlField(localizedUrlFieldConfig)\n    addFields([field])\n  }\n\n  if (config.options?.usePermalink && !indexedFields['permalink']) {\n    const field = createPermalinkField({\n      fieldName: 'permalink',\n      sourceField: urlFieldConfig.fieldName,\n    })\n\n    updatedFields = [field, ...updatedFields]\n  }\n\n  return {\n    configs: {\n      localizedSlugFieldConfig,\n      localizedUrlFieldConfig,\n      slugFieldConfig,\n      urlFieldConfig,\n    },\n    fields: updatedFields,\n  }\n}\n"],"names":["createLocalizedSlugsField","createLocalizedUrlField","createPermalinkField","createSlugField","createUrlField","createFieldConfigs","enhanceFields","config","fields","locales","updatedFields","indexedFields","reduce","index","field","name","addFields","newFields","forEach","push","console","warn","localizedSlugFieldConfig","localizedUrlFieldConfig","slugFieldConfig","urlFieldConfig","fieldName","slugFields","localizedField","options","usePermalink","sourceField","configs"],"mappings":"AAIA,SACEA,yBAAyB,EACzBC,uBAAuB,EACvBC,oBAAoB,EACpBC,eAAe,EACfC,cAAc,QACT,qBAAoB;AAC3B,SAASC,kBAAkB,QAAQ,0BAAyB;AAE5D,OAAO,MAAMC,gBAAgB,CAAC,EAC5BC,MAAM,EACNC,MAAM,EACNC,OAAO,EAKR;IACC,IAAIC,gBAAgB;WAAIF;KAAO,CAAC,2CAA2C;;IAE3E,gCAAgC;IAChC,MAAMG,gBAAgBH,OAAOI,MAAM,CACjC,CAACC,OAAOC;QACN,IAAI,UAAUA,SAAS,OAAOA,MAAMC,IAAI,KAAK,UAAU;YACrDF,KAAK,CAACC,MAAMC,IAAI,CAAC,GAAGD;QACtB;QACA,OAAOD;IACT,GACA,CAAC;IAGH,MAAMG,YAAY,CAACC;QACjBA,UAAUC,OAAO,CAAC,CAACJ;YACjB,IAAI,UAAUA,SAAS,OAAOA,MAAMC,IAAI,KAAK,UAAU;gBACrD,IAAI,CAACJ,aAAa,CAACG,MAAMC,IAAI,CAAC,EAAE;oBAC9BL,cAAcS,IAAI,CAACL;oBACnBH,aAAa,CAACG,MAAMC,IAAI,CAAC,GAAGD;gBAC9B;YACF,OAAO;gBACLM,QAAQC,IAAI,CAAC,+CAA+CP;YAC9D;QACF;IACF;IAEA,0BAA0B;IAC1B,MAAM,EAAEQ,wBAAwB,EAAEC,uBAAuB,EAAEC,eAAe,EAAEC,cAAc,EAAE,GAC1FpB,mBAAmBE,QAAQE;IAE7B,kBAAkB;IAClB,IAAI,CAACE,aAAa,CAACa,gBAAgBE,SAAS,CAAC,EAAE;QAC7C,MAAMC,aAAaxB,gBAAgB;YAAEI,QAAQiB;QAAgB;QAC7DR,UAAUW,YAAY,uCAAuC;;IAC/D;IAEA,4BAA4B;IAC5B,IAAI,CAAChB,aAAa,CAACW,yBAAyBI,SAAS,CAAC,EAAE;QACtD,MAAME,iBAAiB5B,0BAA0BsB;QACjDN,UAAU;YAACY;SAAe;IAC5B;IAEA,iBAAiB;IACjB,IAAI,CAACjB,aAAa,CAACc,eAAeC,SAAS,CAAC,EAAE;QAC5C,MAAMZ,QAAQV,eAAeqB;QAE7BT,UAAU;YAACF;SAAM;IACnB;IAEA,0BAA0B;IAC1B,IAAI,CAACH,aAAa,CAACY,wBAAwBG,SAAS,CAAC,EAAE;QACrD,MAAMZ,QAAQb,wBAAwBsB;QACtCP,UAAU;YAACF;SAAM;IACnB;IAEA,IAAIP,OAAOsB,OAAO,EAAEC,gBAAgB,CAACnB,aAAa,CAAC,YAAY,EAAE;QAC/D,MAAMG,QAAQZ,qBAAqB;YACjCwB,WAAW;YACXK,aAAaN,eAAeC,SAAS;QACvC;QAEAhB,gBAAgB;YAACI;eAAUJ;SAAc;IAC3C;IAEA,OAAO;QACLsB,SAAS;YACPV;YACAC;YACAC;YACAC;QACF;QACAjB,QAAQE;IACV;AACF,EAAC"}