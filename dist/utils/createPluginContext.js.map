{"version":3,"sources":["../../src/utils/createPluginContext.ts"],"sourcesContent":["import type { CollectionSlug } from 'payload'\n\nimport type {\n  AppendLocaleToUrlOptions,\n  LocalizedSlugFieldConfig,\n  LocalizedUrlFieldConfig,\n  NavigationPluginConfig,\n  PermalinkFieldConfig,\n  SlugFieldConfig,\n  SlugifyOptions,\n  UrlFieldConfig,\n} from '../types.js'\n\nimport { defaultValues } from '../constants.js'\n\nexport type PluginContext = {\n  appendLocaleToUrl: AppendLocaleToUrlOptions\n  collections: CollectionSlug[]\n  fallbackLocale: string\n  fieldConfigs: {\n    localizedSlugFieldConfig: LocalizedSlugFieldConfig\n    localizedUrlFieldConfig: LocalizedUrlFieldConfig\n    permalinkFieldConfig: PermalinkFieldConfig\n    slugFieldConfig: SlugFieldConfig\n    urlFieldConfig: UrlFieldConfig\n  }\n  locales: string[]\n  nestedDocsEnabled: boolean\n  permalinkEnabled: boolean\n  slugifyOptions: Required<SlugifyOptions>\n}\nexport const createPluginContext = (\n  pluginConfig: NavigationPluginConfig,\n  locales: string[],\n): PluginContext => {\n  const fields: NavigationPluginConfig['fields'] = pluginConfig.fields || {}\n\n  const slugFieldConfig = createFieldConfig('slug', fields.slug)\n\n  const localizedSlugFieldConfig = createFieldConfig('localizedSlug', fields.localizedSlug, {\n    sourceField: slugFieldConfig.fieldName,\n  })\n  const urlFieldConfig = createFieldConfig('url', fields.url)\n  const localizedUrlFieldConfig = createFieldConfig('localizedUrl', fields.localizedUrl, {\n    sourceField: urlFieldConfig.fieldName,\n  })\n  const permalinkFieldConfig = createFieldConfig('permalink', fields.permalink, {\n    sourceField: urlFieldConfig.fieldName,\n  })\n\n  // Default base configuration\n  return {\n    appendLocaleToUrl: pluginConfig.appendLocaleToUrl || defaultValues.appendLocaleToUrl,\n    collections: pluginConfig.collections,\n    fallbackLocale: pluginConfig.appendLocaleToUrl || defaultValues.fallbackLocale,\n    fieldConfigs: {\n      localizedSlugFieldConfig,\n      localizedUrlFieldConfig,\n      permalinkFieldConfig,\n      slugFieldConfig,\n      urlFieldConfig,\n    },\n    locales, // Provided locales\n    nestedDocsEnabled: Boolean(pluginConfig.nestedDocsPlugin), // Enable nested docs if provided\n    permalinkEnabled: pluginConfig.permalinkEnabled ?? defaultValues.permalinkEnabled, // Default to true if not specified\n    slugifyOptions: {\n      ...defaultValues.slugifyOptions,\n      ...(pluginConfig.slugifyOptions || {}), // Allow overrides\n    },\n  }\n}\n\ntype DefaultFieldKeys = keyof typeof defaultValues.fields\nconst createFieldConfig = <T>(\n  fieldKey: DefaultFieldKeys, // Specify the default field key\n  config?: Partial<T>,\n  injected?: Partial<T>,\n): T => {\n  const defaultConfig = defaultValues.fields[fieldKey] as T\n\n  if (!defaultConfig) {\n    throw new Error(`Invalid field key: ${fieldKey}`)\n  }\n\n  return {\n    ...defaultConfig, // Use the default configuration for the specified field key\n    ...injected, // Apply injected values\n    ...config, // Apply user-provided configuration (highest priority)\n  }\n}\n"],"names":["defaultValues","createPluginContext","pluginConfig","locales","fields","slugFieldConfig","createFieldConfig","slug","localizedSlugFieldConfig","localizedSlug","sourceField","fieldName","urlFieldConfig","url","localizedUrlFieldConfig","localizedUrl","permalinkFieldConfig","permalink","appendLocaleToUrl","collections","fallbackLocale","fieldConfigs","nestedDocsEnabled","Boolean","nestedDocsPlugin","permalinkEnabled","slugifyOptions","fieldKey","config","injected","defaultConfig","Error"],"mappings":"AAaA,SAASA,aAAa,QAAQ,kBAAiB;AAkB/C,OAAO,MAAMC,sBAAsB,CACjCC,cACAC;IAEA,MAAMC,SAA2CF,aAAaE,MAAM,IAAI,CAAC;IAEzE,MAAMC,kBAAkBC,kBAAkB,QAAQF,OAAOG,IAAI;IAE7D,MAAMC,2BAA2BF,kBAAkB,iBAAiBF,OAAOK,aAAa,EAAE;QACxFC,aAAaL,gBAAgBM,SAAS;IACxC;IACA,MAAMC,iBAAiBN,kBAAkB,OAAOF,OAAOS,GAAG;IAC1D,MAAMC,0BAA0BR,kBAAkB,gBAAgBF,OAAOW,YAAY,EAAE;QACrFL,aAAaE,eAAeD,SAAS;IACvC;IACA,MAAMK,uBAAuBV,kBAAkB,aAAaF,OAAOa,SAAS,EAAE;QAC5EP,aAAaE,eAAeD,SAAS;IACvC;IAEA,6BAA6B;IAC7B,OAAO;QACLO,mBAAmBhB,aAAagB,iBAAiB,IAAIlB,cAAckB,iBAAiB;QACpFC,aAAajB,aAAaiB,WAAW;QACrCC,gBAAgBlB,aAAagB,iBAAiB,IAAIlB,cAAcoB,cAAc;QAC9EC,cAAc;YACZb;YACAM;YACAE;YACAX;YACAO;QACF;QACAT;QACAmB,mBAAmBC,QAAQrB,aAAasB,gBAAgB;QACxDC,kBAAkBvB,aAAauB,gBAAgB,IAAIzB,cAAcyB,gBAAgB;QACjFC,gBAAgB;YACd,GAAG1B,cAAc0B,cAAc;YAC/B,GAAIxB,aAAawB,cAAc,IAAI,CAAC,CAAC;QACvC;IACF;AACF,EAAC;AAGD,MAAMpB,oBAAoB,CACxBqB,UACAC,QACAC;IAEA,MAAMC,gBAAgB9B,cAAcI,MAAM,CAACuB,SAAS;IAEpD,IAAI,CAACG,eAAe;QAClB,MAAM,IAAIC,MAAM,CAAC,mBAAmB,EAAEJ,UAAU;IAClD;IAEA,OAAO;QACL,GAAGG,aAAa;QAChB,GAAGD,QAAQ;QACX,GAAGD,MAAM;IACX;AACF"}